,"<b> Index Value:</b>", round(WF_data$Index, 2))
, color = ~qpal(Index), fillOpacity = 1, stroke = FALSE
, clusterOptions = markerClusterOptions()
) %>%
addCircleMarkers(data = WS_data, lat = ~Lat, lng = ~Long
, group = "WestSteep", popup = paste("SampleID:", WS_data$SAMPLEID, "<br>"
,"Site Class:", WS_data$INDEX_REGION, "<br>"
,"Score pi_habit_cling:", round(WS_data$SC_pi_habit_cling,2), "<br>"
,"Score pi_EPTNoBaeHydro:", round(WS_data$SC_pi_EPTNoBaeHydro,2), "<br>"
,"Score pt_tv_toler:", round(WS_data$SC_pt_tv_toler,2), "<br>"
,"Score pi_ffg_col:", round(WS_data$SC_pi_ffg_col,2), "<br>"
,"Score nt_Trich", round(WS_data$SC_nt_Trich,2), "<br>"
,"<b> Index Value:</b>", round(WS_data$Index, 2))
, color = ~qpal(Index), fillOpacity = 1, stroke = FALSE
, clusterOptions = markerClusterOptions()
) %>%
addCircleMarkers(data = MSD_data, lat = ~Lat, lng = ~Long
, group = "MidSizeDry", popup = paste("SampleID:", MSD_data$SAMPLEID, "<br>"
,"Site Class:", MSD_data$INDEX_REGION, "<br>"
,"Score nt_CruMol:", round(MSD_data$SC_nt_CruMol,2), "<br>"
,"Score pi_ffg_pred:", round(MSD_data$SC_pi_ffg_pred,2), "<br>"
,"Score pi_ffg_shred:", round(MSD_data$SC_pi_ffg_shred,2), "<br>"
,"Score pi_habit_cling:", round(MSD_data$SC_pi_habit_cling,2), "<br>"
,"Score pi_CruMol:", round(MSD_data$SC_pi_CruMol,2), "<br>"
,"Score nt_tv_toler:", round(MSD_data$SC_nt_tv_toler,2), "<br>"
,"Score pt_NonIns:", round(MSD_data$SC_pt_NonIns,2), "<br>"
,"<b> Index Value:</b>", round(MSD_data$Index, 2))
, color = ~qpal(Index), fillOpacity = 1, stroke = FALSE
, clusterOptions = markerClusterOptions()
) %>%
addCircleMarkers(data = Nar_data, lat = ~Lat, lng = ~Long
, group = "Narrow", popup = paste("SampleID:", Nar_data$SAMPLEID, "<br>"
,"Site Class:", Nar_data$INDEX_REGION, "<br>"
,"Score pi_ffg_shred:", round(Nar_data$SC_pi_ffg_shred,2), "<br>"
,"Score pt_NonIns:", round(Nar_data$SC_pt_NonIns,2), "<br>"
,"Score pi_habit_climb:", round(Nar_data$SC_pi_habit_climb,2), "<br>"
,"Score pi_EPT:", round(Nar_data$SC_pi_EPT,2), "<br>"
,"Score pi_tv_toler:", round(Nar_data$SC_pi_tv_toler,2), "<br>"
,"<b> Index Value:</b>", round(Nar_data$Index, 2))
, color = ~qpal(Index), fillOpacity = 1, stroke = FALSE
, clusterOptions = markerClusterOptions()
) %>%
addCircleMarkers(data = VN_data, lat = ~Lat, lng = ~Long
, group = "VeryNarrow", popup = paste("SampleID:", VN_data$SAMPLEID, "<br>"
,"Site Class:", VN_data$INDEX_REGION, "<br>"
,"Score pi_ffg_shred:", round(VN_data$SC_pi_ffg_shred,2), "<br>"
,"Score pi_habit_cling:", round(VN_data$SC_pi_habit_cling,2), "<br>"
,"Score pt_NonIns:", round(VN_data$SC_pt_NonIns,2), "<br>"
,"Score nt_EPT:", round(VN_data$SC_nt_EPT,2), "<br>"
,"Score pi_Cru:", round(VN_data$SC_pi_Cru,2), "<br>"
,"Score pt_tv_intol:", round(VN_data$SC_pt_tv_intol,2), "<br>"
,"<b> Index Value:</b>", round(VN_data$Index, 2))
, color = ~qpal(Index), fillOpacity = 1, stroke = FALSE
, clusterOptions = markerClusterOptions()
) %>%
addCircleMarkers(data = WW_data, lat = ~Lat, lng = ~Long
, group = "WetWide", popup = paste("SampleID:", WW_data$SAMPLEID, "<br>"
,"Site Class:", WW_data$INDEX_REGION, "<br>"
,"Score nt_NonIns:", round(WW_data$SC_nt_NonIns,2), "<br>"
,"Score pi_ffg_scrap:", round(WW_data$SC_pi_ffg_scrap,2), "<br>"
,"Score pi_IsopGastHiru:", round(WW_data$SC_pi_IsopGastHiru,2), "<br>"
,"Score pi_NonIns:", round(WW_data$SC_pi_NonIns,2), "<br>"
,"Score pi_Pleco:", round(WW_data$SC_pi_Pleco,2), "<br>"
,"Score pt_tv_toler:", round(WW_data$SC_pt_tv_toler,2), "<br>"
,"<b> Index Value:</b>", round(WW_data$Index, 2))
, color = ~qpal(Index), fillOpacity = 1, stroke = FALSE
, clusterOptions = markerClusterOptions()
) %>%
addLegend(pal = qpal,
values = scale_range,
position = "bottomright",
title = "Values",
opacity = 1) %>%
addLayersControl(overlayGroups = c("East", "WestFlat", "WestSteep", "MidSizeDry",
"Narrow","VeryNarrow", "WetWide"),
options = layersControlOptions(collapsed = FALSE))
df_data <- df_metsc
East_data <- df_data %>%
filter(INDEX_REGION == "EAST")
VN_data <- df_data %>%
filter(INDEX_REGION == "VERYNARROW")
Nar_data <- df_data %>%
filter(INDEX_REGION == "NARROW")
library(dplyr)
East_data <- df_data %>%
filter(INDEX_REGION == "EAST")
VN_data <- df_data %>%
filter(INDEX_REGION == "VERYNARROW")
Nar_data <- df_data %>%
filter(INDEX_REGION == "NARROW")
WF_data <- df_data %>%
filter(INDEX_REGION == "WESTFLAT")
WS_data <- df_data %>%
filter(INDEX_REGION == "WESTSTEEP")
WW_data <- df_data %>%
filter(INDEX_REGION == "WETWIDE")
MSD_data <- df_data %>%
filter(INDEX_REGION == "MIDSIZEDRY")
MI_Map <- leaflet() %>%
addTiles() %>%
addCircleMarkers(data = East_data, lat = ~Lat, lng = ~Long
, group = "East", popup = paste("SampleID:", East_data$SAMPLEID, "<br>"
,"Site Class:", East_data$INDEX_REGION, "<br>"
,"Score pt_NonIns:", round(East_data$SC_pt_NonIns,2), "<br>"
,"Score pi_IsopGastHiru:", round(East_data$SC_pi_IsopGastHiru,2), "<br>"
,"Score pt_tv_toler:", round(East_data$SC_pt_tv_toler,2), "<br>"
,"Score nt_Trich:", round(East_data$SC_nt_Trich,2), "<br>"
,"Score nt_habit_cling:", round(East_data$SC_nt_habit_cling,2), "<br>"
,"Score pi_tv_intol:", round(East_data$SC_pi_tv_intol,2), "<br>"
,"<b> Index Value:</b>", round(East_data$Index, 2))
, color = ~qpal(Index), fillOpacity = 1, stroke = FALSE
, clusterOptions = markerClusterOptions()
) %>%
addCircleMarkers(data = WF_data, lat = ~Lat, lng = ~Long
, group = "WestFlat", popup = paste("SampleID:", WF_data$SAMPLEID, "<br>"
,"Site Class:", WF_data$INDEX_REGION, "<br>"
,"Score pt_NonIns:", round(WF_data$SC_pt_NonIns,2), "<br>"
,"Score pi_EPT:", round(WF_data$SC_pi_EPT,2), "<br>"
,"Score pt_tv_intol:", round(WF_data$SC_pt_tv_intol,2), "<br>"
,"Score pt_tv_toler:", round(WF_data$SC_pt_tv_toler,2), "<br>"
,"Score pi_ffg_col:", round(WF_data$SC_pi_ffg_col,2), "<br>"
,"Score pi_habit_sprawl:", round(WF_data$SC_pi_habit_sprawl,2), "<br>"
,"<b> Index Value:</b>", round(WF_data$Index, 2))
, color = ~qpal(Index), fillOpacity = 1, stroke = FALSE
, clusterOptions = markerClusterOptions()
) %>%
addCircleMarkers(data = WS_data, lat = ~Lat, lng = ~Long
, group = "WestSteep", popup = paste("SampleID:", WS_data$SAMPLEID, "<br>"
,"Site Class:", WS_data$INDEX_REGION, "<br>"
,"Score pi_habit_cling:", round(WS_data$SC_pi_habit_cling,2), "<br>"
,"Score pi_EPTNoBaeHydro:", round(WS_data$SC_pi_EPTNoBaeHydro,2), "<br>"
,"Score pt_tv_toler:", round(WS_data$SC_pt_tv_toler,2), "<br>"
,"Score pi_ffg_col:", round(WS_data$SC_pi_ffg_col,2), "<br>"
,"Score nt_Trich", round(WS_data$SC_nt_Trich,2), "<br>"
,"<b> Index Value:</b>", round(WS_data$Index, 2))
, color = ~qpal(Index), fillOpacity = 1, stroke = FALSE
, clusterOptions = markerClusterOptions()
) %>%
addCircleMarkers(data = MSD_data, lat = ~Lat, lng = ~Long
, group = "MidSizeDry", popup = paste("SampleID:", MSD_data$SAMPLEID, "<br>"
,"Site Class:", MSD_data$INDEX_REGION, "<br>"
,"Score nt_CruMol:", round(MSD_data$SC_nt_CruMol,2), "<br>"
,"Score pi_ffg_pred:", round(MSD_data$SC_pi_ffg_pred,2), "<br>"
,"Score pi_ffg_shred:", round(MSD_data$SC_pi_ffg_shred,2), "<br>"
,"Score pi_habit_cling:", round(MSD_data$SC_pi_habit_cling,2), "<br>"
,"Score pi_CruMol:", round(MSD_data$SC_pi_CruMol,2), "<br>"
,"Score nt_tv_toler:", round(MSD_data$SC_nt_tv_toler,2), "<br>"
,"Score pt_NonIns:", round(MSD_data$SC_pt_NonIns,2), "<br>"
,"<b> Index Value:</b>", round(MSD_data$Index, 2))
, color = ~qpal(Index), fillOpacity = 1, stroke = FALSE
, clusterOptions = markerClusterOptions()
) %>%
addCircleMarkers(data = Nar_data, lat = ~Lat, lng = ~Long
, group = "Narrow", popup = paste("SampleID:", Nar_data$SAMPLEID, "<br>"
,"Site Class:", Nar_data$INDEX_REGION, "<br>"
,"Score pi_ffg_shred:", round(Nar_data$SC_pi_ffg_shred,2), "<br>"
,"Score pt_NonIns:", round(Nar_data$SC_pt_NonIns,2), "<br>"
,"Score pi_habit_climb:", round(Nar_data$SC_pi_habit_climb,2), "<br>"
,"Score pi_EPT:", round(Nar_data$SC_pi_EPT,2), "<br>"
,"Score pi_tv_toler:", round(Nar_data$SC_pi_tv_toler,2), "<br>"
,"<b> Index Value:</b>", round(Nar_data$Index, 2))
, color = ~qpal(Index), fillOpacity = 1, stroke = FALSE
, clusterOptions = markerClusterOptions()
) %>%
addCircleMarkers(data = VN_data, lat = ~Lat, lng = ~Long
, group = "VeryNarrow", popup = paste("SampleID:", VN_data$SAMPLEID, "<br>"
,"Site Class:", VN_data$INDEX_REGION, "<br>"
,"Score pi_ffg_shred:", round(VN_data$SC_pi_ffg_shred,2), "<br>"
,"Score pi_habit_cling:", round(VN_data$SC_pi_habit_cling,2), "<br>"
,"Score pt_NonIns:", round(VN_data$SC_pt_NonIns,2), "<br>"
,"Score nt_EPT:", round(VN_data$SC_nt_EPT,2), "<br>"
,"Score pi_Cru:", round(VN_data$SC_pi_Cru,2), "<br>"
,"Score pt_tv_intol:", round(VN_data$SC_pt_tv_intol,2), "<br>"
,"<b> Index Value:</b>", round(VN_data$Index, 2))
, color = ~qpal(Index), fillOpacity = 1, stroke = FALSE
, clusterOptions = markerClusterOptions()
) %>%
addCircleMarkers(data = WW_data, lat = ~Lat, lng = ~Long
, group = "WetWide", popup = paste("SampleID:", WW_data$SAMPLEID, "<br>"
,"Site Class:", WW_data$INDEX_REGION, "<br>"
,"Score nt_NonIns:", round(WW_data$SC_nt_NonIns,2), "<br>"
,"Score pi_ffg_scrap:", round(WW_data$SC_pi_ffg_scrap,2), "<br>"
,"Score pi_IsopGastHiru:", round(WW_data$SC_pi_IsopGastHiru,2), "<br>"
,"Score pi_NonIns:", round(WW_data$SC_pi_NonIns,2), "<br>"
,"Score pi_Pleco:", round(WW_data$SC_pi_Pleco,2), "<br>"
,"Score pt_tv_toler:", round(WW_data$SC_pt_tv_toler,2), "<br>"
,"<b> Index Value:</b>", round(WW_data$Index, 2))
, color = ~qpal(Index), fillOpacity = 1, stroke = FALSE
, clusterOptions = markerClusterOptions()
) %>%
addLegend(pal = qpal,
values = scale_range,
position = "bottomright",
title = "Values",
opacity = 1) %>%
addLayersControl(overlayGroups = c("East", "WestFlat", "WestSteep", "MidSizeDry",
"Narrow","VeryNarrow", "WetWide"),
options = layersControlOptions(collapsed = FALSE))
# create quantile color palette to change color of markers based on index values
scale_range <- c(0,100)
qpal <- colorBin(c("red","yellow", "green"), domain = scale_range, bins = 5)
MI_Map <- leaflet() %>%
addTiles() %>%
addCircleMarkers(data = East_data, lat = ~Lat, lng = ~Long
, group = "East", popup = paste("SampleID:", East_data$SAMPLEID, "<br>"
,"Site Class:", East_data$INDEX_REGION, "<br>"
,"Score pt_NonIns:", round(East_data$SC_pt_NonIns,2), "<br>"
,"Score pi_IsopGastHiru:", round(East_data$SC_pi_IsopGastHiru,2), "<br>"
,"Score pt_tv_toler:", round(East_data$SC_pt_tv_toler,2), "<br>"
,"Score nt_Trich:", round(East_data$SC_nt_Trich,2), "<br>"
,"Score nt_habit_cling:", round(East_data$SC_nt_habit_cling,2), "<br>"
,"Score pi_tv_intol:", round(East_data$SC_pi_tv_intol,2), "<br>"
,"<b> Index Value:</b>", round(East_data$Index, 2))
, color = ~qpal(Index), fillOpacity = 1, stroke = FALSE
, clusterOptions = markerClusterOptions()
) %>%
addCircleMarkers(data = WF_data, lat = ~Lat, lng = ~Long
, group = "WestFlat", popup = paste("SampleID:", WF_data$SAMPLEID, "<br>"
,"Site Class:", WF_data$INDEX_REGION, "<br>"
,"Score pt_NonIns:", round(WF_data$SC_pt_NonIns,2), "<br>"
,"Score pi_EPT:", round(WF_data$SC_pi_EPT,2), "<br>"
,"Score pt_tv_intol:", round(WF_data$SC_pt_tv_intol,2), "<br>"
,"Score pt_tv_toler:", round(WF_data$SC_pt_tv_toler,2), "<br>"
,"Score pi_ffg_col:", round(WF_data$SC_pi_ffg_col,2), "<br>"
,"Score pi_habit_sprawl:", round(WF_data$SC_pi_habit_sprawl,2), "<br>"
,"<b> Index Value:</b>", round(WF_data$Index, 2))
, color = ~qpal(Index), fillOpacity = 1, stroke = FALSE
, clusterOptions = markerClusterOptions()
) %>%
addCircleMarkers(data = WS_data, lat = ~Lat, lng = ~Long
, group = "WestSteep", popup = paste("SampleID:", WS_data$SAMPLEID, "<br>"
,"Site Class:", WS_data$INDEX_REGION, "<br>"
,"Score pi_habit_cling:", round(WS_data$SC_pi_habit_cling,2), "<br>"
,"Score pi_EPTNoBaeHydro:", round(WS_data$SC_pi_EPTNoBaeHydro,2), "<br>"
,"Score pt_tv_toler:", round(WS_data$SC_pt_tv_toler,2), "<br>"
,"Score pi_ffg_col:", round(WS_data$SC_pi_ffg_col,2), "<br>"
,"Score nt_Trich", round(WS_data$SC_nt_Trich,2), "<br>"
,"<b> Index Value:</b>", round(WS_data$Index, 2))
, color = ~qpal(Index), fillOpacity = 1, stroke = FALSE
, clusterOptions = markerClusterOptions()
) %>%
addCircleMarkers(data = MSD_data, lat = ~Lat, lng = ~Long
, group = "MidSizeDry", popup = paste("SampleID:", MSD_data$SAMPLEID, "<br>"
,"Site Class:", MSD_data$INDEX_REGION, "<br>"
,"Score nt_CruMol:", round(MSD_data$SC_nt_CruMol,2), "<br>"
,"Score pi_ffg_pred:", round(MSD_data$SC_pi_ffg_pred,2), "<br>"
,"Score pi_ffg_shred:", round(MSD_data$SC_pi_ffg_shred,2), "<br>"
,"Score pi_habit_cling:", round(MSD_data$SC_pi_habit_cling,2), "<br>"
,"Score pi_CruMol:", round(MSD_data$SC_pi_CruMol,2), "<br>"
,"Score nt_tv_toler:", round(MSD_data$SC_nt_tv_toler,2), "<br>"
,"Score pt_NonIns:", round(MSD_data$SC_pt_NonIns,2), "<br>"
,"<b> Index Value:</b>", round(MSD_data$Index, 2))
, color = ~qpal(Index), fillOpacity = 1, stroke = FALSE
, clusterOptions = markerClusterOptions()
) %>%
addCircleMarkers(data = Nar_data, lat = ~Lat, lng = ~Long
, group = "Narrow", popup = paste("SampleID:", Nar_data$SAMPLEID, "<br>"
,"Site Class:", Nar_data$INDEX_REGION, "<br>"
,"Score pi_ffg_shred:", round(Nar_data$SC_pi_ffg_shred,2), "<br>"
,"Score pt_NonIns:", round(Nar_data$SC_pt_NonIns,2), "<br>"
,"Score pi_habit_climb:", round(Nar_data$SC_pi_habit_climb,2), "<br>"
,"Score pi_EPT:", round(Nar_data$SC_pi_EPT,2), "<br>"
,"Score pi_tv_toler:", round(Nar_data$SC_pi_tv_toler,2), "<br>"
,"<b> Index Value:</b>", round(Nar_data$Index, 2))
, color = ~qpal(Index), fillOpacity = 1, stroke = FALSE
, clusterOptions = markerClusterOptions()
) %>%
addCircleMarkers(data = VN_data, lat = ~Lat, lng = ~Long
, group = "VeryNarrow", popup = paste("SampleID:", VN_data$SAMPLEID, "<br>"
,"Site Class:", VN_data$INDEX_REGION, "<br>"
,"Score pi_ffg_shred:", round(VN_data$SC_pi_ffg_shred,2), "<br>"
,"Score pi_habit_cling:", round(VN_data$SC_pi_habit_cling,2), "<br>"
,"Score pt_NonIns:", round(VN_data$SC_pt_NonIns,2), "<br>"
,"Score nt_EPT:", round(VN_data$SC_nt_EPT,2), "<br>"
,"Score pi_Cru:", round(VN_data$SC_pi_Cru,2), "<br>"
,"Score pt_tv_intol:", round(VN_data$SC_pt_tv_intol,2), "<br>"
,"<b> Index Value:</b>", round(VN_data$Index, 2))
, color = ~qpal(Index), fillOpacity = 1, stroke = FALSE
, clusterOptions = markerClusterOptions()
) %>%
addCircleMarkers(data = WW_data, lat = ~Lat, lng = ~Long
, group = "WetWide", popup = paste("SampleID:", WW_data$SAMPLEID, "<br>"
,"Site Class:", WW_data$INDEX_REGION, "<br>"
,"Score nt_NonIns:", round(WW_data$SC_nt_NonIns,2), "<br>"
,"Score pi_ffg_scrap:", round(WW_data$SC_pi_ffg_scrap,2), "<br>"
,"Score pi_IsopGastHiru:", round(WW_data$SC_pi_IsopGastHiru,2), "<br>"
,"Score pi_NonIns:", round(WW_data$SC_pi_NonIns,2), "<br>"
,"Score pi_Pleco:", round(WW_data$SC_pi_Pleco,2), "<br>"
,"Score pt_tv_toler:", round(WW_data$SC_pt_tv_toler,2), "<br>"
,"<b> Index Value:</b>", round(WW_data$Index, 2))
, color = ~qpal(Index), fillOpacity = 1, stroke = FALSE
, clusterOptions = markerClusterOptions()
) %>%
addLegend(pal = qpal,
values = scale_range,
position = "bottomright",
title = "Values",
opacity = 1) %>%
addLayersControl(overlayGroups = c("East", "WestFlat", "WestSteep", "MidSizeDry",
"Narrow","VeryNarrow", "WetWide"),
options = layersControlOptions(collapsed = FALSE))
MI_Map # print map for output
library(readxl)
df_metsc <- read_excel("Examples/results_metsc_michigan_test_20200803.xlsx")
View(df_metsc)
shiny::runApp()
output$mymap <- renderLeaflet({
if(is.null(df_metsc)==TRUE){
return(NULL)
} else {
df_data <- df_metsc
# subset data by Index_Region
East_data <- df_data %>%
filter(INDEX_REGION == "EAST")
VN_data <- df_data %>%
filter(INDEX_REGION == "VERYNARROW")
Nar_data <- df_data %>%
filter(INDEX_REGION == "NARROW")
WF_data <- df_data %>%
filter(INDEX_REGION == "WESTFLAT")
WS_data <- df_data %>%
filter(INDEX_REGION == "WESTSTEEP")
WW_data <- df_data %>%
filter(INDEX_REGION == "WETWIDE")
MSD_data <- df_data %>%
filter(INDEX_REGION == "MIDSIZEDRY")
MI_Map <- leaflet() %>%
addTiles() %>%
addCircleMarkers(data = East_data, lat = ~Lat, lng = ~Long
, group = "East", popup = paste("SampleID:", East_data$SAMPLEID, "<br>"
,"Site Class:", East_data$INDEX_REGION, "<br>"
,"Score pt_NonIns:", round(East_data$SC_pt_NonIns,2), "<br>"
,"Score pi_IsopGastHiru:", round(East_data$SC_pi_IsopGastHiru,2), "<br>"
,"Score pt_tv_toler:", round(East_data$SC_pt_tv_toler,2), "<br>"
,"Score nt_Trich:", round(East_data$SC_nt_Trich,2), "<br>"
,"Score nt_habit_cling:", round(East_data$SC_nt_habit_cling,2), "<br>"
,"Score pi_tv_intol:", round(East_data$SC_pi_tv_intol,2), "<br>"
,"<b> Index Value:</b>", round(East_data$Index, 2))
, color = ~qpal(Index), fillOpacity = 1, stroke = FALSE
, clusterOptions = markerClusterOptions()
) %>%
addCircleMarkers(data = WF_data, lat = ~Lat, lng = ~Long
, group = "WestFlat", popup = paste("SampleID:", WF_data$SAMPLEID, "<br>"
,"Site Class:", WF_data$INDEX_REGION, "<br>"
,"Score pt_NonIns:", round(WF_data$SC_pt_NonIns,2), "<br>"
,"Score pi_EPT:", round(WF_data$SC_pi_EPT,2), "<br>"
,"Score pt_tv_intol:", round(WF_data$SC_pt_tv_intol,2), "<br>"
,"Score pt_tv_toler:", round(WF_data$SC_pt_tv_toler,2), "<br>"
,"Score pi_ffg_col:", round(WF_data$SC_pi_ffg_col,2), "<br>"
,"Score pi_habit_sprawl:", round(WF_data$SC_pi_habit_sprawl,2), "<br>"
,"<b> Index Value:</b>", round(WF_data$Index, 2))
, color = ~qpal(Index), fillOpacity = 1, stroke = FALSE
, clusterOptions = markerClusterOptions()
) %>%
addCircleMarkers(data = WS_data, lat = ~Lat, lng = ~Long
, group = "WestSteep", popup = paste("SampleID:", WS_data$SAMPLEID, "<br>"
,"Site Class:", WS_data$INDEX_REGION, "<br>"
,"Score pi_habit_cling:", round(WS_data$SC_pi_habit_cling,2), "<br>"
,"Score pi_EPTNoBaeHydro:", round(WS_data$SC_pi_EPTNoBaeHydro,2), "<br>"
,"Score pt_tv_toler:", round(WS_data$SC_pt_tv_toler,2), "<br>"
,"Score pi_ffg_col:", round(WS_data$SC_pi_ffg_col,2), "<br>"
,"Score nt_Trich", round(WS_data$SC_nt_Trich,2), "<br>"
,"<b> Index Value:</b>", round(WS_data$Index, 2))
, color = ~qpal(Index), fillOpacity = 1, stroke = FALSE
, clusterOptions = markerClusterOptions()
) %>%
addCircleMarkers(data = MSD_data, lat = ~Lat, lng = ~Long
, group = "MidSizeDry", popup = paste("SampleID:", MSD_data$SAMPLEID, "<br>"
,"Site Class:", MSD_data$INDEX_REGION, "<br>"
,"Score nt_CruMol:", round(MSD_data$SC_nt_CruMol,2), "<br>"
,"Score pi_ffg_pred:", round(MSD_data$SC_pi_ffg_pred,2), "<br>"
,"Score pi_ffg_shred:", round(MSD_data$SC_pi_ffg_shred,2), "<br>"
,"Score pi_habit_cling:", round(MSD_data$SC_pi_habit_cling,2), "<br>"
,"Score pi_CruMol:", round(MSD_data$SC_pi_CruMol,2), "<br>"
,"Score nt_tv_toler:", round(MSD_data$SC_nt_tv_toler,2), "<br>"
,"Score pt_NonIns:", round(MSD_data$SC_pt_NonIns,2), "<br>"
,"<b> Index Value:</b>", round(MSD_data$Index, 2))
, color = ~qpal(Index), fillOpacity = 1, stroke = FALSE
, clusterOptions = markerClusterOptions()
) %>%
addCircleMarkers(data = Nar_data, lat = ~Lat, lng = ~Long
, group = "Narrow", popup = paste("SampleID:", Nar_data$SAMPLEID, "<br>"
,"Site Class:", Nar_data$INDEX_REGION, "<br>"
,"Score pi_ffg_shred:", round(Nar_data$SC_pi_ffg_shred,2), "<br>"
,"Score pt_NonIns:", round(Nar_data$SC_pt_NonIns,2), "<br>"
,"Score pi_habit_climb:", round(Nar_data$SC_pi_habit_climb,2), "<br>"
,"Score pi_EPT:", round(Nar_data$SC_pi_EPT,2), "<br>"
,"Score pi_tv_toler:", round(Nar_data$SC_pi_tv_toler,2), "<br>"
,"<b> Index Value:</b>", round(Nar_data$Index, 2))
, color = ~qpal(Index), fillOpacity = 1, stroke = FALSE
, clusterOptions = markerClusterOptions()
) %>%
addCircleMarkers(data = VN_data, lat = ~Lat, lng = ~Long
, group = "VeryNarrow", popup = paste("SampleID:", VN_data$SAMPLEID, "<br>"
,"Site Class:", VN_data$INDEX_REGION, "<br>"
,"Score pi_ffg_shred:", round(VN_data$SC_pi_ffg_shred,2), "<br>"
,"Score pi_habit_cling:", round(VN_data$SC_pi_habit_cling,2), "<br>"
,"Score pt_NonIns:", round(VN_data$SC_pt_NonIns,2), "<br>"
,"Score nt_EPT:", round(VN_data$SC_nt_EPT,2), "<br>"
,"Score pi_Cru:", round(VN_data$SC_pi_Cru,2), "<br>"
,"Score pt_tv_intol:", round(VN_data$SC_pt_tv_intol,2), "<br>"
,"<b> Index Value:</b>", round(VN_data$Index, 2))
, color = ~qpal(Index), fillOpacity = 1, stroke = FALSE
, clusterOptions = markerClusterOptions()
) %>%
addCircleMarkers(data = WW_data, lat = ~Lat, lng = ~Long
, group = "WetWide", popup = paste("SampleID:", WW_data$SAMPLEID, "<br>"
,"Site Class:", WW_data$INDEX_REGION, "<br>"
,"Score nt_NonIns:", round(WW_data$SC_nt_NonIns,2), "<br>"
,"Score pi_ffg_scrap:", round(WW_data$SC_pi_ffg_scrap,2), "<br>"
,"Score pi_IsopGastHiru:", round(WW_data$SC_pi_IsopGastHiru,2), "<br>"
,"Score pi_NonIns:", round(WW_data$SC_pi_NonIns,2), "<br>"
,"Score pi_Pleco:", round(WW_data$SC_pi_Pleco,2), "<br>"
,"Score pt_tv_toler:", round(WW_data$SC_pt_tv_toler,2), "<br>"
,"<b> Index Value:</b>", round(WW_data$Index, 2))
, color = ~qpal(Index), fillOpacity = 1, stroke = FALSE
, clusterOptions = markerClusterOptions()
) %>%
addLegend(pal = qpal,
values = scale_range,
position = "bottomright",
title = "Values",
opacity = 1) %>%
addLayersControl(overlayGroups = c("East", "WestFlat", "WestSteep", "MidSizeDry",
"Narrow","VeryNarrow", "WetWide"),
options = layersControlOptions(collapsed = FALSE))
MI_Map # print map for output
} ## ELSE statement ~ END
}) ##renderLeaflet~END
shiny::runApp()
library(readxl)
df_metsc <- read_excel("Examples/results_metsc_michigan_test_20200803.xlsx")
View(df_metsc)
shiny::runApp()
map_data <- eventReactive(df_metsc,{
if(is.null(df_metsc)==TRUE){
return(NULL)
} else {
return(df_metsc)
} ## else statement ~ END
}) ## map_data ~ END
map_data <- if(is.null(df_metsc)==TRUE){
return(NULL)
} else {
return(df_metsc)
} ## else statement ~ END
?eventReactive
runApp()
runApp()
lifecycle::last_warnings()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
View(MSD_data)
View(WW_data)
library(MIEGLEtools)
?MIEGLEtools
library(MIEGLEtools)
?metric.valuesMI
library(dplyr)
library(BioMonTools)
?metric.values
R_Shiny_Example_Input_File <- read.delim("C:/Users/Ben.Block/OneDrive - Tetra Tech, Inc/GitHub/MIEGLEtools_Input_Tests/R_Shiny_Example_Input_File.txt")
View(R_Shiny_Example_Input_File)
df_data <- read.delim("C:/Users/Ben.Block/OneDrive - Tetra Tech, Inc/GitHub/MIEGLEtools_Input_Tests/R_Shiny_Example_Input_File.txt")
View(df_data)
MichMetrics <- c("nt_CruMol"
,"pi_ffg_pred"
,"pi_ffg_shred"
,"pi_habit_cling"
,"pi_CruMol"
,"nt_tv_toler"
,"pt_NonIns"
,"pi_habit_climb"
,"pi_EPT"
,"pi_EPTNoBaeHydro"
,"pi_tv_toler"
,"nt_EPT"
,"pi_Cru"
,"pt_tv_intol"
,"nt_NonIns"
,"pi_ffg_scrap"
,"pi_IsopGastHiru"
,"pi_NonIns"
,"pi_Pleco"
,"pt_tv_toler"
,"pi_ffg_col"
,"pi_habit_sprawl"
,"nt_Trich"
,"nt_habit_cling"
,"pi_tv_intol"
)# END MichMetricss
# columns to keep
keep_cols <- c("Lat", "Long")
df_metval <- suppressWarnings(metric.values.MI(fun.DF = df_data, fun.Community = "bugs",
fun.MetricNames = MichMetrics, fun.cols2keep=keep_cols, boo.Shiny = TRUE))
library(MIEGLEtools)
df_metval <- suppressWarnings(metric.values.MI(fun.DF = df_data, fun.Community = "bugs",
fun.MetricNames = MichMetrics, fun.cols2keep=keep_cols, boo.Shiny = TRUE))
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
